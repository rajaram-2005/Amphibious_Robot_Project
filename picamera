from picamera import PiCamera
from time import sleep
import os

# Initialize Pi Camera
camera = PiCamera()

# Define where to store the image
image_path = '/home/pi/captured_image.jpg'

# Capture the image
camera.start_preview()
sleep(2)  # Allow the camera to adjust lighting
camera.capture(image_path)
camera.stop_preview()

print(f"Image saved at {image_path}")

import requests                             (optional)

# Define the image file and the API endpoint (URL)
image_path = '/home/pi/captured_image.jpg'
api_endpoint = 'https://your-api-endpoint.com/upload'
api_key = 'YOUR_API_KEY'  # If your API requires authentication

# Open the image file in binary mode
with open(image_path, 'rb') as image_file:
    # Send the image using a POST request
    files = {'file': image_file}
    headers = {'Authorization': f'Bearer {api_key}'}  # Example for authenticated API
    response = requests.post(api_endpoint, files=files, headers=headers)

# Check if the request was successful
if response.status_code == 200:
    print('Image successfully uploaded!')
else:
    print(f'Failed to upload image. Status code: {response.status_code}')

import boto3
from botocore.exceptions import NoCredentialsError

# Initialize the S3 client
s3 = boto3.client('s3')

bucket_name = 'your-bucket-name'
s3_file_name = 'image_captured.jpg'
local_file_path = '/home/pi/captured_image.jpg'

try:
    s3.upload_file(local_file_path, bucket_name, s3_file_name)
    print(f"Image uploaded to S3 at s3://{bucket_name}/{s3_file_name}")
except FileNotFoundError:
    print("The file was not found")
except NoCredentialsError:
    print("Credentials not available")
                                                               (optional)
from google.cloud import vision
import io

# Load the image file
with io.open(image_path, 'rb') as image_file:
    content = image_file.read()

# Initialize Google Vision API client
client = vision.ImageAnnotatorClient()

# Create an image object
image = vision.Image(content=content)

# Perform label detection on the image file
response = client.label_detection(image=image)
labels = response.label_annotations

print('Labels detected:')
for label in labels:
    print(f"{label.description}: {label.score:.2f}")


import psycopg2

# Connect to PostgreSQL
conn = psycopg2.connect(
    database="species_db", 
    user="your_username", 
    password="your_password", 
    host="127.0.0.1", 
    port="5432"
)

cursor = conn.cursor()

# Insert new species data into the database
insert_query = """
INSERT INTO species (name, category, description, location, image_url)
VALUES (%s, %s, %s, %s, %s)
"""
cursor.execute(insert_query, ('Rose', 'Flora', 'A beautiful red flower', 'GPS-coordinates', 'https://s3-url-of-image.jpg'))

# Commit and close
conn.commit()
cursor.close()
conn.close()


